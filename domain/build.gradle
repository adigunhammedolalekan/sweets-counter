apply plugin: 'kotlin'

apply plugin: 'kotlin-allopen'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
    }
}

allOpen {
    annotation 'com.deividasstr.domain.utils.OpenClass'
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    test.java.srcDirs += 'src/test/kotlin'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "io.reactivex.rxjava2:rxjava:2.1.14"
    implementation 'com.jakewharton.threetenabp:threetenabp:1.1.0'

    // Tests
    testImplementation "junit:junit:$jUnitVersion"
    testImplementation 'com.nhaarman:mockito-kotlin:' + mockitoKotlinVersion
    testImplementation 'org.threeten:threetenbp:1.3.6'
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

task jarTest(type: Jar) {
    from sourceSets.test.output
    classifier = 'test'
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}

check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}

task copyDomainTestClasses(type: Copy) {
    from "build/classes/kotlin"
    into "build/classes/java"
}

configurations {
    testOutput

    artifacts {
        testOutput jarTest
    }
}
